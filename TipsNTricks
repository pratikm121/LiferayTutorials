Following are some tips to follow while setting up the liferay :- 

#Setting up multiple database and using datasource jndi to connect.

1. Go to the tomcat/conf directory and edit context.xml file and add following entries 

<Context>

    <!-- Default set of monitored resources. If one of these changes, the    -->
    <!-- web application will be reloaded.                                   -->
    <WatchedResource>WEB-INF/web.xml</WatchedResource>
    <WatchedResource>WEB-INF/tomcat-web.xml</WatchedResource>
    <WatchedResource>${catalina.base}/conf/web.xml</WatchedResource>

    <!-- Uncomment this to disable session persistence across Tomcat restarts -->
    <!--
    <Manager pathname="" />
    -->
    <!-- Setting up JNDI for Liferyay Default Datadource. -->
    <Resource name="jdbc/liferay"
        auth="Container"
        type="javax.sql.DataSource"
        maxActive="40"
        maxIdle="20"
        maxWait="1000"
        username="postgres"
        password="postgres"
        driverClassName="org.postgresql.Driver"
        url="jdbc:postgresql://localhost:5432/liferaydb"
    />

     <!-- Setting up JNDI for Liferyay Default Datadource. -->
    <Resource name="jdbc/rithmoffice"
        auth="Container"
        type="javax.sql.DataSource"
        maxActive="40"
        maxIdle="20"
        maxWait="1000"
        username="rithmoffice"
        password="rithmoffice"
        driverClassName="org.postgresql.Driver"
        url="jdbc:postgresql://localhost:5432/rithmoffice"
    />
</Context>


2. Under the liferay installation folder edit the portal-setup-wizard.properties

jdbc.default.jndi.name=jdbc/liferay

3. Add method in database connection class to get jdbc using the jndi naming method. 
#(Use this method if you are using normal java based independant module to connect to your db. Else follow step 4)

public static Connection getConnection(String connectionSource) throws SQLException, NamingException{
		Connection conn = null;
		DataSource ds = null;
		Context context = new InitialContext();
		Context envContext  = (Context)context.lookup(ApplicationConstants.ENV_CONTEXT);
		if(ApplicationConstants.LIFERAY_DB.equalsIgnoreCase(connectionSource)) {
			ds = (DataSource)envContext.lookup("jdbc/liferay");
		}else {
			ds = (DataSource)envContext.lookup("jdbc/rithmoffice");
		}	
		 		
		conn = ds.getConnection();
		
		return conn;		
	}
  
 4. If you are connecting from direclty within a liferay module/portlet/plugin, then use below method :- 
 
 public static Connection getConnection(String connectionSource) throws SQLException, NamingException{
		
		/*Below 3 lines are mandat for using JNDI based datasource if using dafault Liferay Portlets :- STUPID*/
		Thread thread = Thread.currentThread();
		ClassLoader origLoader = thread.getContextClassLoader();
		thread.setContextClassLoader(PortalClassLoaderUtil.getClassLoader());
		
		Connection conn = null;
		DataSource ds = null;
		Context context = new InitialContext();
		Context envContext  = (Context)context.lookup(ApplicationConstants.ENV_CONTEXT);
		if(ApplicationConstants.LIFERAY_DB.equalsIgnoreCase(connectionSource)) {
			ds = (DataSource)envContext.lookup("jdbc/liferay");
		}else {
			ds = (DataSource)envContext.lookup("jdbc/rithmoffice");
		}	
		 		
		conn = ds.getConnection();
		
		return conn;		
	}
